CREATE GENERATOR FOLDER_ID_GEN;
CREATE GENERATOR ITEM_ID_GEN;


CREATE TABLE RB_FIELD 
(
  TABLE_NAME	VARCHAR(60) NOT NULL,
  FIELD_NAME	VARCHAR(60) NOT NULL,
  FIELD_ALIAS	VARCHAR(60),
  DATATYPE	VARCHAR(60),
  SELECTABLE	CHAR(1),
  SEARCHABLE	CHAR(1),
  SORTABLE	CHAR(1),
  AUTOSEARCH	CHAR(1),
  MANDATORY	CHAR(1),
 PRIMARY KEY (TABLE_NAME, FIELD_NAME)
);

CREATE TABLE RB_FOLDER 
(
  FOLDER_ID	INTEGER,
  NAME	VARCHAR(60) NOT NULL,
  PARENT_ID	INTEGER NOT NULL,
 PRIMARY KEY (NAME, PARENT_ID)
);

SET TERM ^ ;

CREATE TRIGGER SET_FOLDER_ID FOR RB_FOLDER 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  if (new.folder_id is null) then
    new.folder_id = gen_id(folder_id_gen, 1);
END
 ^

COMMIT WORK ^
SET TERM ;^

CREATE TABLE RB_ITEM 
(
  ITEM_ID	INTEGER,
  FOLDER_ID	INTEGER NOT NULL,
  NAME	VARCHAR(60) NOT NULL,
  ITEM_SIZE	INTEGER,
  ITEM_TYPE	INTEGER NOT NULL,
  MODIFIED	DOUBLE PRECISION NOT NULL,
  DELETED	DOUBLE PRECISION,
  TEMPLATE	BLOB SUB_TYPE 0 SEGMENT SIZE 400,
 PRIMARY KEY (FOLDER_ID, ITEM_TYPE, NAME, MODIFIED)
);




SET TERM ^ ;



CREATE TRIGGER SET_ITEM_ID FOR RB_ITEM 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
 if (new.item_id is null) then
   new.item_id = gen_id(item_id_gen, 1);
END
 ^

COMMIT WORK ^
SET TERM ;^


CREATE TABLE RB_JOIN 
(
  TABLE_NAME1	VARCHAR(60) NOT NULL,
  TABLE_NAME2	VARCHAR(60) NOT NULL,
  JOIN_TYPE	VARCHAR(60),
  FIELD_NAMES1	VARCHAR(255),
  OPERATORS	VARCHAR(60),
  FIELD_NAMES2	VARCHAR(255),
 PRIMARY KEY (TABLE_NAME1, TABLE_NAME2)
);


CREATE TABLE RB_TABLE 
(
  TABLE_NAME	VARCHAR(60),
  TABLE_ALIAS	VARCHAR(60)
);

